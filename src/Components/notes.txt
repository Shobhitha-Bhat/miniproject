import "./App.css";
import "bootstrap/dist/css/bootstrap.min.css";
import { BrowserRouter, Routes, Route, Navigate } from "react-router-dom";
import { useState,} from "react";
import { Login } from "./Components/Login.js";
import { ParentDashboard } from "./Components/ParentDashboard.js";
import { FacultyDashboard } from "./Components/FacultyDashboard.js";
import AcademicsPage from './SubComponents/AcademicsPage.js'
import NotifyParentPage from './SubComponents/NotifyParentPage.js'
import StudentProfilePage from './SubComponents/StudentProfilePage.js'
import ExtraCurricularPage from './SubComponents/StudentProfilePage.js'

function App() {
  
  const [userType, setUserType] = useState(null);

  const userLogin = (type) => {
    setUserType(type);
    
  };

  const setUserData = (data) => {
    // localStorage.setItem("UserType", JSON.stringify(userType));
    localStorage.setItem("LoginData", JSON.stringify(data));
  };

  const logout=()=>{
    localStorage.clear();
    setUserType(null);
  }

  return (
    <BrowserRouter>
      <Routes>
        {/* render login form as the deafult view when someone opens the app */}
        <Route
          path="/"
          element={
            userType ? (
              <Navigate to={`/${userType}Dashboard`}  />
            ) : (
              <Login
                userType={userType}
                userLogin={userLogin}
                setUserData={setUserData}
              />
            )
          }
        />
        <Route
          path="/parentDashboard"
          element={
            userType === "parent" ? (
              <ParentDashboard logout={logout} />
            ) : (
              <Navigate to="/"  />
            )
          }
        />
        <Route
          path="/facultyDashboard"
          element={
            userType === "faculty" ? (
              <FacultyDashboard logout={logout} />
            ) : (
              <Navigate to="/" />
            )
          }
        />
      </Routes>
      <Routes>
       
        <Route path="/notifyparentpage" element={<NotifyParentPage />} />
        <Route path="/academicspage" element={<AcademicsPage />} />
        <Route path="/extracurricularpage" element={<ExtraCurricularPage/>}/>
        <Route path="/studentprofilepage" element={<StudentProfilePage />} />
      </Routes>
    </BrowserRouter>
  );
}

export default App;
==========================
import React from "react";
import { Container, Button, Form, Row, Col } from "react-bootstrap";
import { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";

export const Login = ({ userType, userLogin, setUserData }) => {
  const navigate = useNavigate();

  const [femail, setfemail] = useState("");
  const [facultyid, setfacultyid] = useState("");
  const [usn, setusn] = useState("");
  const [pmail, setpmail] = useState("");

  useEffect(() => {
    if (userType && localStorage.getItem("userType")) {
      navigate(`/${userType}Dashboard`);
    }else{
      renderLoginForm();
    }
  }, [navigate, userType]);

  const goto = (e) => {
    e.preventDefault();
    setUserData({ femail, facultyid, usn, pmail });
    if (userType === "faculty") {
      navigate("/facultyDashboard");
    } else if (userType === "parent") {
      navigate("/parentDashboard");
    }
  };

  const renderLoginForm = () => {
    if (userType === "faculty") {
      return (
        <Form onSubmit={goto}>
          <Form.Group controlId="facultyEmail">
            <Form.Label>Email address</Form.Label>
            <Form.Control
              type="email"
              value={femail}
              placeholder="Enter email"
              onChange={(e) => setfemail(e.target.value)}
              required
            />
          </Form.Group>
          <Form.Group controlId="facultyid">
            <Form.Label>FacultyID</Form.Label>
            <Form.Control
              type="text"
              value={facultyid}
              onChange={(e) => setfacultyid(e.target.value)}
              placeholder="FacultyID"
              required
            />
          </Form.Group>
          <Button variant="primary" type="submit" className="my-5">
            Login as Faculty
          </Button>
        </Form>
      );
    } else if (userType === "parent") {
      return (
        <Form onSubmit={goto}>
          <Form.Group controlId="parentEmail">
            <Form.Label>Email address</Form.Label>
            <Form.Control
              type="email"
              value={pmail}
              onChange={(e) => setpmail(e.target.value)}
              placeholder="Enter email"
              required
            />
          </Form.Group>
          <Form.Group controlId="StudentUSN">
            <Form.Label>Student USN</Form.Label>
            <Form.Control
              type="text"
              value={usn}
              onChange={(e) => setusn(e.target.value)}
              placeholder="Student USN"
              required
            />
          </Form.Group>
          <Button variant="primary" type="submit" className="my-5">
            Login as Parent
          </Button>
        </Form>
      );
    }
  };

  return (
    <Container>
      <Row className="justify-content-center mt-5">
        <Col md={6}>
          <h2>Select Login Type</h2>
          <div className="d-flex justify-content-between mb-4">
            <Button onClick={() => userLogin("faculty") }>Faculty Login</Button>
            <Button onClick={() => userLogin("parent")}>Parent Login</Button>
          </div>
          {renderLoginForm()}
        </Col>
      </Row>
    </Container>
  );
};
